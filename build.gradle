plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.github.node-gradle.node" version "3.5.1"
	id 'io.franzbecker.gradle-lombok' version '5.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

repositories {
	mavenCentral()
}

//node {
//	// Version of node to use.
//	version = '16.17.0'
//
//	// If true, it will download node using above parameters.
//	// If false, it will try to use globally installed node.
//	download = true
//
//	// Set the work directory for unpacking node
//	workDir = file("${project.projectDir}/src/main/companies-frontend/nodejs")
//
//	// Set the work directory for NPM
//	npmWorkDir = file("${project.projectDir}/src/main/companies-frontend/npm")
//
//	// Set the work directory where node_modules should be located
//	nodeModulesDir = file("${project.projectDir}/src/main/companies-frontend")
//}
//
//task npmInstallDependencies(type: NpmTask) {
//	dependsOn 'npmSetup'
//	execOverrides {
//		it.ignoreExitValue = true
//		it.workingDir = 'src/main/companies-frontend'
//	}
//	args = ['install']
//}
//
//task npmBuild(type: NpmTask) {
//	dependsOn 'npmInstallDependencies'
//	execOverrides {
//		it.workingDir = 'src/main/companies-frontend'
//	}
//	args = ['run', 'build']
//}
//
//task copyFrontendToBuild(type: Copy) {
//	dependsOn 'npmBuild'
//
//	from "$projectDir/src/main/companies-frontend/build/"
//	into "$buildDir/resources/main/static"
//}
//
//processResources {
//	dependsOn 'copyFrontendToBuild'
//}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok:1.18.22'
	runtimeOnly 'org.hsqldb:hsqldb'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
